apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-server
  labels:
    app: webhook-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook-server
  template:
    metadata:
      labels:
        app: webhook-server
    spec:
      containers:
        - name: webhook-server
          # local setup for testing
          image: webhook-server:v0.0.1
          imagePullPolicy: IfNotPresent
          env:
            - name: TLS_DIR
              value: /run/secrets/tls
            - name: SKIP_NAMESPACE
              value: devops
            - name: OP
              value: W3sib3AiOiJhZGQiLCJwYXRoIjoiL3NwZWMiLCJ2YWx1ZSI6eyJ0ZW1wbGF0ZSI6eyJzcGVjIjp7ImluaXRDb250YWluZXJzIjpbeyJuYW1lIjoiY3VybC1jb250YWluZXIiLCJpbWFnZSI6ImN1cmxpbWFnZXMvY3VybDpsYXRlc3QiLCJpbWFnZVB1bGxQb2xpY3kiOiJJZk5vdFByZXNlbnQiLCJyZXN0YXJ0UG9saWN5IjoiQWx3YXlzIiwiY29tbWFuZCI6WyJzbGVwcCIsImluZmluaXR5Il19XX19fX1d
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: webhook-tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
      volumes:
        - name: webhook-tls-certs
          secret:
            secretName: webhook-server-tls

---
apiVersion: v1
kind: Service
metadata:
  name: webhook-server-svc
  namespace: devops
spec:
  selector:
    app: webhook-server
  ports:
    - port: 8080
      targetPort: 8080
